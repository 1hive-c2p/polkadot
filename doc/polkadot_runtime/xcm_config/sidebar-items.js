window.SIDEBAR_ITEMS = {"struct":[["BaseDeliveryFee","The base fee for the message delivery fees."],["BaseXcmWeight","The amount of weight an XCM operation takes. This is a safe overestimate."],["CheckAccount","The Checking Account, which holds any native assets that have been teleported out and not back in (yet)."],["CollectivesLocation",""],["CollectivesOrFellows",""],["CouncilBodyId",""],["Dot",""],["DotForCollectives",""],["DotForStatemint",""],["FeeAssetId","The asset ID for the asset that we use to pay for message delivery fees."],["FellowshipAdminBodyId",""],["LocalCheckAccount","The Checking Account along with the indication that the local chain is able to mint tokens."],["MaxAssetsIntoHolding",""],["MaxInstructions","Maximum number of instructions in a single XCM fragment. A sanity check against weight calculations getting too crazy."],["OnlyParachains",""],["SafeCallFilter","A call filter for the XCM Transact instruction. This is a temporary measure until we properly account for proof size weights."],["StakingAdminBodyId",""],["ThisNetwork","The Polkadot network ID. This is named."],["TokenLocation","The location of the DOT token, from the context of this chain. Since this token is native to this chain, we make it synonymous with it and thus it is the `Here` location, which means “equivalent to the context”."],["UniversalLocation","Our location in the universe of consensus systems."],["XcmConfig",""]],"type":[["Barrier","The barriers one of which must be passed for an XCM message to be executed."],["CouncilToPlurality","Type to convert a council origin to a Plurality `MultiLocation` value."],["FellowshipAdminToPlurality","Type to convert the FellowshipAdmin origin to a Plurality `MultiLocation` value."],["LocalAssetTransactor","Our asset transactor. This is what allows us to interact with the runtime assets from the point of view of XCM-only concepts like `MultiLocation` and `MultiAsset`."],["LocalOriginToLocation","Type to convert an `Origin` type value into a `MultiLocation` value which represents an interior location of this chain."],["LocalPalletOriginToLocation","Type to convert a pallet `Origin` type value into a `MultiLocation` value which represents an interior location of this chain for a destination chain."],["SovereignAccountOf","The canonical means of converting a `MultiLocation` into an `AccountId`, used when we want to determine the sovereign account controlled by a location."],["StakingAdminToPlurality","Type to convert the `StakingAdmin` origin to a Plurality `MultiLocation` value."],["TrustedTeleporters","Polkadot Relay recognizes/respects the Statemint chain as a teleporter."],["XcmRouter","The XCM router. When we want to send an XCM message, we use this type. It amalgamates all of our individual routers."]]};